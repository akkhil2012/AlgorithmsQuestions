//https://leetcode.com/problems/minimum-window-substring/

public String minWindow(String s, String t) {
            if (s == null || t == null || s.length() ==0 || t.length() == 0 ||
                    s.length() < t.length()) {
                return new String();
            }
            int[] map = new int[128];
            int count = t.length();
            int start = 0, end = 0, minLen = Integer.MAX_VALUE,startIndex =0;

            new String(t.toCharArray()).chars().mapToObj(c -> (char)c)
                    .forEach(val -> map[val]++);


            char[] chS = s.toCharArray();
            while (end < chS.length) {
                if (map[s.charAt(end++)]-- >0) {
                    count--;
                }
                while (count == 0) {
                    if (end - start < minLen) {
                        startIndex = start;
                        minLen = end - start;
                    }
                    if (map[s.charAt(start++)]++ == 0) {
                        count++;
                    }
                }
            }

            return minLen == Integer.MAX_VALUE? new String():
                    new String(chS,startIndex,minLen);
        }
