class DequeUsingDDL{

    static class DNode{

        int value;
        DNode prev=null,next=null;

        public DNode(int value) {
            this.value = value;
        }
    }


    DNode front=null,rear=null;
    int size = 0;

    public void insertfront(int x){

        DNode node = new DNode(x);
        if(front==null){
            front = rear = node;
        }else{
            node.next = front;
            front.prev = node;

            front = node;
        }
        size++;
    }

    public void insertRear(int x){
        DNode node = new DNode(x);
        if(rear==null){
            front = rear = node;
        }else{
            rear.next = node;
            node.prev = rear;

            rear = node;
        }

        size++;

    }

    public void deletefront(){
        if(front==null){
            return;
        }

        if(front==rear)
            front = rear = null;
        else{
            front = front.next;
            front.prev = null;
        }



    }

    public void deleteRear(){
        if(rear==null)
            return;
        if(rear == front){
            rear = front = null;
        }else{
            rear  = rear.prev;
            rear.next = null;
        }

    }
